{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","helpers/helpers.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","isUniqueContact","allContacts","newContactName","some","item","name","toLowerCase","INITIAL_STATE","currentUserInputName","currentUserInputNumber","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","addContact","props","length","alert","resetState","this","className","Styles","form","onSubmit","formLabels","htmlFor","formFields","placeholder","type","id","onChange","pattern","btnSubmit","Component","ContactList","contacts","handleDelete","contactList","map","ContactListItem","key","number","btnDelete","onClick","Filter","filterWrapper","filterLabel","filterFields","App","filter","handleAddContact","helpers","newContact","uuidv4","handleDeleteContact","filteredContacts","persistedData","localStorage","getItem","JSON","parse","console","log","setItem","stringify","query","filteredItems","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7631aa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__23z4o\",\"formLabels\":\"ContactForm_formLabels__3LbmW\",\"formFields\":\"ContactForm_formFields__3h6q4\",\"btnSubmit\":\"ContactForm_btnSubmit__1lGCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1WojI\",\"ContactListItem\":\"ContactList_ContactListItem__1ydPP\",\"btnDelete\":\"ContactList_btnDelete__2Py5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__37xuG\",\"filterLabel\":\"Filter_filterLabel__3TQy-\",\"filterFields\":\"Filter_filterFields__2X13H\"};","export const filterContact = (allContacts, query) =>\n  allContacts.filter(item =>\n    item.name.toLowerCase().includes(query.toLowerCase()),\n  );\n\nexport const isUniqueContact = (allContacts, newContactName) =>\n  allContacts.some(\n    item => item.name.toLowerCase() === newContactName.toLowerCase(),\n  );\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  currentUserInputName: '',\n  currentUserInputNumber: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { addContact } = this.props;\n    const { currentUserInputName, currentUserInputNumber } = this.state;\n\n    if (currentUserInputName.length < 2 || currentUserInputNumber.length < 2) {\n      alert(`Fields must contain at least 2 symbols`);\n      return;\n    }\n\n    addContact(currentUserInputName, currentUserInputNumber) &&\n      this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { currentUserInputName, currentUserInputNumber } = this.state;\n\n    return (\n      <form className={Styles.form} onSubmit={this.handleSubmit}>\n        <label className={Styles.formLabels} htmlFor=\"currentUserInputName\">\n          Name:\n        </label>\n        <input\n          className={Styles.formFields}\n          placeholder=\"New contact name...\"\n          type=\"text\"\n          id=\"currentUserInputName\"\n          name=\"currentUserInputName\"\n          value={currentUserInputName}\n          onChange={this.handleChange}\n        />\n        <label className={Styles.formLabels} htmlFor=\"currentUserInputNumber\">\n          Number:\n        </label>\n        <input\n          className={Styles.formFields}\n          id=\"currentUserInputNumber\"\n          placeholder=\"000-00-00\"\n          type=\"tel\"\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          name=\"currentUserInputNumber\"\n          value={currentUserInputNumber}\n          onChange={this.handleChange}\n        />\n        <button className={Styles.btnSubmit} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, handleDelete }) => (\n  <ul className={Styles.contactList}>\n    {contacts.map(item => (\n      <li className={Styles.ContactListItem} key={item.id}>\n        {item.name}: {item.number}\n        <button\n          className={Styles.btnDelete}\n          type=\"button\"\n          onClick={e => handleDelete(item.id)}\n        >\n          delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n  handleDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from './Filter.module.css';\n\nconst Filter = ({ handleChange, value }) => (\n  <div className={Styles.filterWrapper}>\n    <label className={Styles.filterLabel} htmlFor=\"filter\">\n      Find contact by name:\n    </label>\n    <input\n      className={Styles.filterFields}\n      id=\"filter\"\n      value={value}\n      type=\"text\"\n      onChange={handleChange}\n      name=\"filter\"\n      placeholder=\"Put your query here...\"\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default Filter;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as helpers from './helpers/helpers';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    try {\n      const persistedData = localStorage.getItem('contacts');\n      if (persistedData)\n        this.setState({ contacts: [...JSON.parse(persistedData)] });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n\n    try {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  handleAddContact = (name, number) => {\n    const { contacts } = this.state;\n\n    if (helpers.isUniqueContact(contacts, name)) {\n      alert(`${name} is already in contact!`);\n      return false;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    this.setState(state => ({\n      contacts: [...state.contacts, newContact],\n    }));\n\n    return true;\n  };\n\n  handleDeleteContact = id => {\n    const { contacts } = this.state;\n\n    const filteredContacts = contacts.filter(item => item.id !== id);\n    this.setState({ contacts: [...filteredContacts] });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredItems = helpers.filterContact(contacts, filter);\n\n    return (\n      <>\n        <h1 className=\"appTitle\">Phonebook</h1>\n        <ContactForm addContact={this.handleAddContact} />\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter handleChange={this.handleChange} />\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={filteredItems}\n            handleDelete={this.handleDeleteContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}